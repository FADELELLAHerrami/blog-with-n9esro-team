var r={};r.version="0.4.2";var e=Object.prototype.toString;var t=/^[0-9]+$/;function promote(r,e){if(0==r[e].length)return r[e]={};var t={};for(var n in r[e])t[n]=r[e][n];r[e]=t;return t}function parse(r,e,n,s){var i=r.shift();if(i){var a=e[n]=e[n]||[];if("]"==i)Array.isArray(a)?""!=s&&a.push(s):"object"==typeof a?a[Object.keys(a).length]=s:a=e[n]=[e[n],s];else if(~i.indexOf("]")){i=i.substr(0,i.length-1);!t.test(i)&&Array.isArray(a)&&(a=promote(e,n));parse(r,a,i,s)}else{!t.test(i)&&Array.isArray(a)&&(a=promote(e,n));parse(r,a,i,s)}}else Array.isArray(e[n])?e[n].push(s):"object"==typeof e[n]||"undefined"==typeof e[n]?e[n]=s:e[n]=[e[n],s]}function merge(r,e,n){if(~e.indexOf("]")){var s=e.split("["),i=s.length,a=i-1;parse(s,r,"base",n)}else{if(!t.test(e)&&Array.isArray(r.base)){var o={};for(var f in r.base)o[f]=r.base[f];r.base=o}set(r.base,e,n)}return r}function parseObject(r){var e={base:{}};Object.keys(r).forEach((function(t){merge(e,t,r[t])}));return e.base}function parseString(r){return String(r).split("&").reduce((function(r,e){try{e=decodeURIComponent(e.replace(/\+/g," "))}catch(r){}var t=e.indexOf("="),n=lastBraceInKey(e),s=e.substr(0,n||t),i=e.substr(n||t,e.length),i=i.substr(i.indexOf("=")+1,i.length);""==s&&(s=e,i="");return merge(r,s,i)}),{base:{}}).base}r.parse=function(r){return null==r||""==r?{}:"object"==typeof r?parseObject(r):parseString(r)};var n=r.stringify=function(r,t){return Array.isArray(r)?stringifyArray(r,t):"[object Object]"==e.call(r)?stringifyObject(r,t):"string"==typeof r?stringifyString(r,t):t+"="+r};function stringifyString(r,e){if(!e)throw new TypeError("stringify expects an object");return e+"="+encodeURIComponent(r)}function stringifyArray(r,e){var t=[];if(!e)throw new TypeError("stringify expects an object");for(var s=0;s<r.length;s++)t.push(n(r[s],e+"[]"));return t.join("&")}function stringifyObject(r,e){var t=[],s=Object.keys(r),i;for(var a=0,o=s.length;a<o;++a){i=s[a];t.push(n(r[i],e?e+"["+encodeURIComponent(i)+"]":encodeURIComponent(i)))}return t.join("&")}function set(r,e,t){var n=r[e];void 0===n?r[e]=t:Array.isArray(n)?n.push(t):r[e]=[n,t]}function lastBraceInKey(r){var e=r.length,t,n;for(var s=0;s<e;++s){n=r[s];"]"==n&&(t=false);"["==n&&(t=true);if("="==n&&!t)return s}}const s=r.version,i=r.parse,a=r.stringify;export default r;export{i as parse,a as stringify,s as version};

