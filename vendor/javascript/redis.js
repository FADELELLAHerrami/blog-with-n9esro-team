import e from"net";import"util";import"sys";import t from"./lib/util.js";import i from"./lib/to_array.js";import n from"events";import s from"crypto";import o from"hiredis";import r from"buffer";import a from"./lib/parser/javascript.js";import l from"./lib/commands.js";import u from"process";var h="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var c={};var d=i;function Queue(){(this||h).tail=[];(this||h).head=[];(this||h).offset=0}Queue.prototype.shift=function(){if((this||h).offset===(this||h).head.length){var e=(this||h).head;e.length=0;(this||h).head=(this||h).tail;(this||h).tail=e;(this||h).offset=0;if(0===(this||h).head.length)return}return(this||h).head[(this||h).offset++]};Queue.prototype.push=function(e){return(this||h).tail.push(e)};Queue.prototype.forEach=function(e,t){var i=(this||h).head.slice((this||h).offset),n,s;i.push.apply(i,(this||h).tail);if(t)for(n=0,s=i.length;n<s;n+=1)e.call(t,i[n],n,i);else for(n=0,s=i.length;n<s;n+=1)e(i[n],n,i);return i};Queue.prototype.getLength=function(){return(this||h).head.length-(this||h).offset+(this||h).tail.length};Object.defineProperty(Queue.prototype,"length",{get:function(){return this.getLength()}});c&&(c=Queue);var f=c;var m="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var p={};var _=n,b=t,g=o;p.debug_mode=false;p.name="hiredis";function HiredisReplyParser(e){(this||m).name=p.name;(this||m).options=e||{};this.reset();_.EventEmitter.call(this||m)}b.inherits(HiredisReplyParser,_.EventEmitter);p.Parser=HiredisReplyParser;HiredisReplyParser.prototype.reset=function(){(this||m).reader=new g.Reader({return_buffers:(this||m).options.return_buffers||false})};HiredisReplyParser.prototype.execute=function(e){var t;(this||m).reader.feed(e);while(true){try{t=(this||m).reader.get()}catch(e){this.emit("error",e);break}if(void 0===t)break;t&&t.constructor===Error?this.emit("reply error",t):this.emit("reply",t)}};var y="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var v={};var w=r.Buffer;var R=u;var C=e,k=t,q=f,E=i,x=n,A=s,S=[],M,T=0,z=6379,j="127.0.0.1";v.debug_mode=false;try{p;S.push(p)}catch(e){v.debug_mode&&console.warn("hiredis parser not installed.")}S.push(a);function RedisClient(e,t){(this||y).stream=e;(this||y).options=t=t||{};(this||y).connection_id=++T;(this||y).connected=false;(this||y).ready=false;(this||y).connections=0;void 0===(this||y).options.socket_nodelay&&((this||y).options.socket_nodelay=true);(this||y).should_buffer=false;(this||y).command_queue_high_water=(this||y).options.command_queue_high_water||1e3;(this||y).command_queue_low_water=(this||y).options.command_queue_low_water||0;(this||y).max_attempts=null;t.max_attempts&&!isNaN(t.max_attempts)&&t.max_attempts>0&&((this||y).max_attempts=+t.max_attempts);(this||y).command_queue=new q;(this||y).offline_queue=new q;(this||y).commands_sent=0;(this||y).connect_timeout=false;t.connect_timeout&&!isNaN(t.connect_timeout)&&t.connect_timeout>0&&((this||y).connect_timeout=+t.connect_timeout);(this||y).enable_offline_queue=true;"boolean"===typeof(this||y).options.enable_offline_queue&&((this||y).enable_offline_queue=(this||y).options.enable_offline_queue);this.initialize_retry_vars();(this||y).pub_sub_mode=false;(this||y).subscription_set={};(this||y).monitoring=false;(this||y).closing=false;(this||y).server_info={};(this||y).auth_pass=null;(this||y).parser_module=null;(this||y).selected_db=null;(this||y).old_state=null;var i=this||y;(this||y).stream.on("connect",(function(){i.on_connect()}));(this||y).stream.on("data",(function(e){i.on_data(e)}));(this||y).stream.on("error",(function(e){i.on_error(e.message)}));(this||y).stream.on("close",(function(){i.connection_gone("close")}));(this||y).stream.on("end",(function(){i.connection_gone("end")}));(this||y).stream.on("drain",(function(){i.should_buffer=false;i.emit("drain")}));x.EventEmitter.call(this||y)}k.inherits(RedisClient,x.EventEmitter);v.RedisClient=RedisClient;RedisClient.prototype.initialize_retry_vars=function(){(this||y).retry_timer=null;(this||y).retry_totaltime=0;(this||y).retry_delay=150;(this||y).retry_backoff=1.7;(this||y).attempts=1};RedisClient.prototype.flush_and_error=function(e){var t;while((this||y).offline_queue.length>0){t=(this||y).offline_queue.shift();"function"===typeof t.callback&&t.callback(e)}(this||y).offline_queue=new q;while((this||y).command_queue.length>0){t=(this||y).command_queue.shift();"function"===typeof t.callback&&t.callback(e)}(this||y).command_queue=new q};RedisClient.prototype.on_error=function(e){var t="Redis connection to "+(this||y).host+":"+(this||y).port+" failed - "+e,i=this||y,n;if(!(this||y).closing){v.debug_mode&&console.warn(t);this.flush_and_error(t);(this||y).connected=false;(this||y).ready=false;this.emit("error",new Error(t));this.connection_gone("error")}};RedisClient.prototype.do_auth=function(){var e=this||y;v.debug_mode&&console.log("Sending auth to "+e.host+":"+e.port+" id "+e.connection_id);e.send_anyway=true;e.send_command("auth",[(this||y).auth_pass],(function(t,i){if(t){if(t.toString().match("LOADING")){console.log("Redis still loading, trying to authenticate later");setTimeout((function(){e.do_auth()}),2e3);return}return e.emit("error",new Error("Auth error: "+t.message))}if("OK"!==i.toString())return e.emit("error",new Error("Auth failed: "+i.toString()));v.debug_mode&&console.log("Auth succeeded "+e.host+":"+e.port+" id "+e.connection_id);if(e.auth_callback){e.auth_callback(t,i);e.auth_callback=null}e.emit("connect");e.options.no_ready_check?e.on_ready():e.ready_check()}));e.send_anyway=false};RedisClient.prototype.on_connect=function(){v.debug_mode&&console.log("Stream connected "+(this||y).host+":"+(this||y).port+" id "+(this||y).connection_id);var e=this||y;(this||y).connected=true;(this||y).ready=false;(this||y).attempts=0;(this||y).connections+=1;(this||y).command_queue=new q;(this||y).emitted_end=false;this.initialize_retry_vars();(this||y).options.socket_nodelay&&(this||y).stream.setNoDelay();(this||y).stream.setTimeout(0);this.init_parser();if((this||y).auth_pass)this.do_auth();else{this.emit("connect");(this||y).options.no_ready_check?this.on_ready():this.ready_check()}};RedisClient.prototype.init_parser=function(){var e=this||y;if((this||y).options.parser){if(!S.some((function(t){if(t.name===e.options.parser){e.parser_module=t;v.debug_mode&&console.log("Using parser module: "+e.parser_module.name);return true}})))throw new Error("Couldn't find named parser "+e.options.parser+" on this system")}else{v.debug_mode&&console.log("Using default parser module: "+S[0].name);(this||y).parser_module=S[0]}(this||y).parser_module.debug_mode=v.debug_mode;(this||y).reply_parser=new(this||y).parser_module.Parser({return_buffers:e.options.return_buffers||e.options.detect_buffers||false});(this||y).reply_parser.on("reply error",(function(t){e.return_error(new Error(t))}));(this||y).reply_parser.on("reply",(function(t){e.return_reply(t)}));(this||y).reply_parser.on("error",(function(t){e.emit("error",new Error("Redis reply parser error: "+t.stack))}))};RedisClient.prototype.on_ready=function(){var e=this||y;(this||y).ready=true;if(null!==(this||y).old_state){(this||y).monitoring=(this||y).old_state.monitoring;(this||y).pub_sub_mode=(this||y).old_state.pub_sub_mode;(this||y).selected_db=(this||y).old_state.selected_db;(this||y).old_state=null}null!==(this||y).selected_db&&this.send_command("select",[(this||y).selected_db]);if(true!==(this||y).pub_sub_mode){(this||y).monitoring?this.send_command("monitor"):this.send_offline_queue();this.emit("ready")}else{var t=0;var callback=function(){t--;0==t&&e.emit("ready")};Object.keys((this||y).subscription_set).forEach((function(i){var n=i.split(" ");v.debug_mode&&console.warn("sending pub/sub on_ready "+n[0]+", "+n[1]);t++;e.send_command(n[0]+"scribe",[n[1]],callback)}))}};RedisClient.prototype.on_info_cmd=function(e,t){var i=this||y,n={},s,o;if(e)return i.emit("error",new Error("Ready check failed: "+e.message));s=t.toString().split("\r\n");s.forEach((function(e){var t=e.split(":");t[1]&&(n[t[0]]=t[1])}));n.versions=[];n.redis_version.split(".").forEach((function(e){n.versions.push(+e)}));(this||y).server_info=n;if(!n.loading||n.loading&&"0"===n.loading){v.debug_mode&&console.log("Redis server ready.");this.on_ready()}else{o=1e3*n.loading_eta_seconds;o>1e3&&(o=1e3);v.debug_mode&&console.log("Redis server still loading, trying again in "+o);setTimeout((function(){i.ready_check()}),o)}};RedisClient.prototype.ready_check=function(){var e=this||y;v.debug_mode&&console.log("checking server ready state...");(this||y).send_anyway=true;this.info((function(t,i){e.on_info_cmd(t,i)}));(this||y).send_anyway=false};RedisClient.prototype.send_offline_queue=function(){var e,t=0;while((this||y).offline_queue.length>0){e=(this||y).offline_queue.shift();v.debug_mode&&console.log("Sending offline command: "+e.command);t+=!this.send_command(e.command,e.args,e.callback)}(this||y).offline_queue=new q;if(!t){(this||y).should_buffer=false;this.emit("drain")}};RedisClient.prototype.connection_gone=function(e){var t=this||y,i;if(!(this||y).retry_timer){v.debug_mode&&console.warn("Redis connection is gone from "+e+" event.");(this||y).connected=false;(this||y).ready=false;if(null===(this||y).old_state){var n={monitoring:(this||y).monitoring,pub_sub_mode:(this||y).pub_sub_mode,selected_db:(this||y).selected_db};(this||y).old_state=n;(this||y).monitoring=false;(this||y).pub_sub_mode=false;(this||y).selected_db=null}if(!(this||y).emitted_end){this.emit("end");(this||y).emitted_end=true}this.flush_and_error("Redis connection gone from "+e+" event.");if((this||y).closing){(this||y).retry_timer=null;v.debug_mode&&console.warn("connection ended from quit command, not retrying.")}else{(this||y).retry_delay=Math.floor((this||y).retry_delay*(this||y).retry_backoff);v.debug_mode&&console.log("Retry connection in "+(this||y).current_retry_delay+" ms");if((this||y).max_attempts&&(this||y).attempts>=(this||y).max_attempts){(this||y).retry_timer=null;console.error("node_redis: Couldn't get Redis connection after "+(this||y).max_attempts+" attempts.")}else{(this||y).attempts+=1;this.emit("reconnecting",{delay:t.retry_delay,attempt:t.attempts});(this||y).retry_timer=setTimeout((function(){v.debug_mode&&console.log("Retrying connection...");t.retry_totaltime+=t.current_retry_delay;if(t.connect_timeout&&t.retry_totaltime>=t.connect_timeout){t.retry_timer=null;console.error("node_redis: Couldn't get Redis connection after "+t.retry_totaltime+"ms.")}else{t.stream.connect(t.port,t.host);t.retry_timer=null}}),(this||y).retry_delay)}}}};RedisClient.prototype.on_data=function(e){v.debug_mode&&console.log("net read "+(this||y).host+":"+(this||y).port+" id "+(this||y).connection_id+": "+e.toString());try{(this||y).reply_parser.execute(e)}catch(e){this.emit("error",e)}};RedisClient.prototype.return_error=function(e){var t=(this||y).command_queue.shift(),i=(this||y).command_queue.getLength();if(false===(this||y).pub_sub_mode&&0===i){this.emit("idle");(this||y).command_queue=new q}if((this||y).should_buffer&&i<=(this||y).command_queue_low_water){this.emit("drain");(this||y).should_buffer=false}if(t&&"function"===typeof t.callback)try{t.callback(e)}catch(e){R.nextTick((function(){throw e}))}else{console.log("node_redis: no callback to send error: "+e.message);R.nextTick((function(){throw e}))}};function try_callback(e,t){try{e(null,t)}catch(e){R.nextTick((function(){throw e}))}}function reply_to_object(e){var t={},i,n,s,o;if(0===e.length)return null;for(i=0,n=e.length;i<n;i+=2){s=e[i].toString();o=e[i+1];t[s]=o}return t}function reply_to_strings(e){var t;if(w.isBuffer(e))return e.toString();if(Array.isArray(e)){for(t=0;t<e.length;t++)e[t]=e[t].toString();return e}return e}RedisClient.prototype.return_reply=function(e){var t,i,n,s,o,r,a,l,u;t=(this||y).command_queue.shift(),u=(this||y).command_queue.getLength();if(false===(this||y).pub_sub_mode&&0===u){this.emit("idle");(this||y).command_queue=new q}if((this||y).should_buffer&&u<=(this||y).command_queue_low_water){this.emit("drain");(this||y).should_buffer=false}if(t&&!t.sub_command)if("function"===typeof t.callback){(this||y).options.detect_buffers&&false===t.buffer_args&&(e=reply_to_strings(e));e&&"hgetall"===t.command.toLowerCase()&&(e=reply_to_object(e));try_callback(t.callback,e)}else v.debug_mode&&console.log("no callback for reply: "+(e&&e.toString&&e.toString()));else if((this||y).pub_sub_mode||t&&t.sub_command){if(Array.isArray(e)){o=e[0].toString();if("message"===o)this.emit("message",e[1].toString(),e[2]);else if("pmessage"===o)this.emit("pmessage",e[1].toString(),e[2].toString(),e[3]);else{if("subscribe"!==o&&"unsubscribe"!==o&&"psubscribe"!==o&&"punsubscribe"!==o)throw new Error("subscriptions are active but got unknown reply type "+o);if(0===e[2]){(this||y).pub_sub_mode=false;(this||y).debug_mode&&console.log("All subscriptions removed, exiting pub/sub mode")}else(this||y).pub_sub_mode=true;t&&"function"===typeof t.callback&&try_callback(t.callback,e[1].toString());this.emit(o,e[1].toString(),e[2])}}else if(!(this||y).closing)throw new Error("subscriptions are active but got an invalid reply: "+e)}else{if(!(this||y).monitoring)throw new Error("node_redis command queue state error. If you can reproduce this, please report it.");s=e.indexOf(" ");r=e.slice(0,s);a=e.indexOf('"');l=e.slice(a+1,-1).split('" "').map((function(e){return e.replace(/\\"/g,'"')}));this.emit("monitor",r,l)}};function Command(e,t,i,n,s){(this||y).command=e;(this||y).args=t;(this||y).sub_command=i;(this||y).buffer_args=n;(this||y).callback=s}RedisClient.prototype.send_command=function(e,t,i){var n,s,o,r,a,l,u,h=(this||y).stream,c="",d=0,f;if("string"!==typeof e)throw new Error("First argument to send_command must be the command name string, not "+typeof e);if(!Array.isArray(t))throw new Error("send_command: second argument must be an array");if("function"===typeof i);else{if(i)throw new Error("send_command: last argument must be a callback or undefined");f=typeof t[t.length-1];"function"!==f&&"undefined"!==f||(i=t.pop())}("sadd"===e||"SADD"===e)&&t.length>0&&Array.isArray(t[t.length-1])&&(t=t.slice(0,-1).concat(t[t.length-1]));u=false;for(r=0,a=t.length,n;r<a;r+=1)w.isBuffer(t[r])&&(u=true);o=new Command(e,t,false,u,i);if(!(this||y).ready&&!(this||y).send_anyway||!h.writable){v.debug_mode&&(h.writable||console.log("send command: stream is not writeable."));if((this||y).enable_offline_queue){v.debug_mode&&console.log("Queueing "+e+" for next server connection.");(this||y).offline_queue.push(o);(this||y).should_buffer=true}else{var m=new Error("send_command: stream not writeable. enable_offline_queue is false");if(!o.callback)throw m;o.callback(m)}return false}if("subscribe"===e||"psubscribe"===e||"unsubscribe"===e||"punsubscribe"===e)this.pub_sub_command(o);else if("monitor"===e)(this||y).monitoring=true;else if("quit"===e)(this||y).closing=true;else if(true===(this||y).pub_sub_mode)throw new Error("Connection in pub/sub mode, only pub/sub commands may be used");(this||y).command_queue.push(o);(this||y).commands_sent+=1;l=t.length+1;c="*"+l+"\r\n$"+e.length+"\r\n"+e+"\r\n";if(u){v.debug_mode&&console.log("send command ("+c+") has Buffer arguments");d+=!h.write(c);for(r=0,a=t.length,n;r<a;r+=1){n=t[r];w.isBuffer(n)||n instanceof String||(n=String(n));if(w.isBuffer(n))if(0===n.length){v.debug_mode&&console.log("send_command: using empty string for 0 length buffer");d+=!h.write("$0\r\n\r\n")}else{d+=!h.write("$"+n.length+"\r\n");d+=!h.write(n);d+=!h.write("\r\n");v.debug_mode&&console.log("send_command: buffer send "+n.length+" bytes")}else{v.debug_mode&&console.log("send_command: string send "+w.byteLength(n)+" bytes: "+n);d+=!h.write("$"+w.byteLength(n)+"\r\n"+n+"\r\n")}}}else{for(r=0,a=t.length,n;r<a;r+=1){n=t[r];"string"!==typeof n&&(n=String(n));c+="$"+w.byteLength(n)+"\r\n"+n+"\r\n"}v.debug_mode&&console.log("send "+(this||y).host+":"+(this||y).port+" id "+(this||y).connection_id+": "+c);d+=!h.write(c)}v.debug_mode&&console.log("send_command buffered_writes: "+d," should_buffer: "+(this||y).should_buffer);(d||(this||y).command_queue.getLength()>=(this||y).command_queue_high_water)&&((this||y).should_buffer=true);return!(this||y).should_buffer};RedisClient.prototype.pub_sub_command=function(e){var t,i,n,s;false===(this||y).pub_sub_mode&&v.debug_mode&&console.log("Entering pub/sub mode from "+e.command);(this||y).pub_sub_mode=true;e.sub_command=true;n=e.command;s=e.args;if("subscribe"===n||"psubscribe"===n){i="subscribe"===n?"sub":"psub";for(t=0;t<s.length;t++)(this||y).subscription_set[i+" "+s[t]]=true}else{i="unsubscribe"===n?"sub":"psub";for(t=0;t<s.length;t++)delete(this||y).subscription_set[i+" "+s[t]]}};RedisClient.prototype.end=function(){(this||y).stream._events={};(this||y).connected=false;(this||y).ready=false;return(this||y).stream.end()};function Multi(e,t){(this||y).client=e;(this||y).queue=[["MULTI"]];Array.isArray(t)&&((this||y).queue=(this||y).queue.concat(t))}v.Multi=Multi;function set_union(e,t){var i={};e.forEach((function(e){i[e]=true}));t.forEach((function(e){i[e]=true}));return Object.keys(i)}M=set_union(["get","set","setnx","setex","append","strlen","del","exists","setbit","getbit","setrange","getrange","substr","incr","decr","mget","rpush","lpush","rpushx","lpushx","linsert","rpop","lpop","brpop","brpoplpush","blpop","llen","lindex","lset","lrange","ltrim","lrem","rpoplpush","sadd","srem","smove","sismember","scard","spop","srandmember","sinter","sinterstore","sunion","sunionstore","sdiff","sdiffstore","smembers","zadd","zincrby","zrem","zremrangebyscore","zremrangebyrank","zunionstore","zinterstore","zrange","zrangebyscore","zrevrangebyscore","zcount","zrevrange","zcard","zscore","zrank","zrevrank","hset","hsetnx","hget","hmset","hmget","hincrby","hdel","hlen","hkeys","hvals","hgetall","hexists","incrby","decrby","getset","mset","msetnx","randomkey","select","move","rename","renamenx","expire","expireat","keys","dbsize","auth","ping","echo","save","bgsave","bgrewriteaof","shutdown","lastsave","type","multi","exec","discard","sync","flushdb","flushall","sort","info","monitor","ttl","persist","slaveof","debug","config","subscribe","unsubscribe","psubscribe","punsubscribe","publish","watch","unwatch","cluster","restore","migrate","dump","object","client","eval","evalsha"],l);M.forEach((function(e){RedisClient.prototype[e]=function(t,i){return Array.isArray(t)&&"function"===typeof i?this.send_command(e,t,i):this.send_command(e,E(arguments))};RedisClient.prototype[e.toUpperCase()]=RedisClient.prototype[e];Multi.prototype[e]=function(){(this||y).queue.push([e].concat(E(arguments)));return this||y};Multi.prototype[e.toUpperCase()]=Multi.prototype[e]}));RedisClient.prototype.select=function(e,t){var i=this||y;this.send_command("select",[e],(function(n,s){null===n&&(i.selected_db=e);"function"===typeof t&&t(n,s)}))};RedisClient.prototype.SELECT=RedisClient.prototype.select;RedisClient.prototype.auth=function(){var e=E(arguments);(this||y).auth_pass=e[0];(this||y).auth_callback=e[1];v.debug_mode&&console.log("Saving auth as "+(this||y).auth_pass);(this||y).connected&&this.send_command("auth",e)};RedisClient.prototype.AUTH=RedisClient.prototype.auth;RedisClient.prototype.hmget=function(e,t,i){return Array.isArray(t)&&"function"===typeof i?this.send_command("hmget",[e].concat(t),i):Array.isArray(e)&&"function"===typeof t?this.send_command("hmget",e,t):this.send_command("hmget",E(arguments))};RedisClient.prototype.HMGET=RedisClient.prototype.hmget;RedisClient.prototype.hmset=function(e,t){var i,n,s,o,r;if(Array.isArray(e)&&"function"===typeof t)return this.send_command("hmset",e,t);e=E(arguments);if("function"===typeof e[e.length-1]){t=e[e.length-1];e.length-=1}else t=null;if(2===e.length&&"string"===typeof e[0]&&"object"===typeof e[1]){i=[e[0]];n=Object.keys(e[1]);for(s=0,o=n.length;s<o;s++){r=n[s];i.push(r);if("string"!==typeof e[1][r]){var a=new Error("hmset expected value to be a string",r,":",e[1][r]);if(t)return t(a);throw a}i.push(e[1][r])}e=i}return this.send_command("hmset",e,t)};RedisClient.prototype.HMSET=RedisClient.prototype.hmset;Multi.prototype.hmset=function(){var e=E(arguments),t;if(e.length>=2&&"string"===typeof e[0]&&"object"===typeof e[1]){t=["hmset",e[0]];Object.keys(e[1]).map((function(i){t.push(i);t.push(e[1][i])}));e[2]&&t.push(e[2]);e=t}else e.unshift("hmset");(this||y).queue.push(e);return this||y};Multi.prototype.HMSET=Multi.prototype.hmset;Multi.prototype.exec=function(e){var t=this||y;(this||y).queue.forEach((function(e,i){var n=e[0],s;e="function"===typeof e[e.length-1]?e.slice(1,-1):e.slice(1);1===e.length&&Array.isArray(e[0])&&(e=e[0]);if("hmset"===n.toLowerCase()&&"object"===typeof e[1]){s=e.pop();Object.keys(s).forEach((function(t){e.push(t);e.push(s[t])}))}(this||y).client.send_command(n,e,(function(e,n){if(e){var s=t.queue[i];if("function"!==typeof s[s.length-1])throw new Error(e);s[s.length-1](e);t.queue.splice(i,1)}}))}),this||y);return(this||y).client.send_command("EXEC",[],(function(i,n){if(i){if(e){e(new Error(i));return}throw new Error(i)}var s,o,r,a,l,u;if(n)for(s=1,o=t.queue.length;s<o;s+=1){l=n[s-1];u=t.queue[s];l&&"hgetall"===u[0].toLowerCase()&&(n[s-1]=l=reply_to_object(l));"function"===typeof u[u.length-1]&&u[u.length-1](null,l)}e&&e(null,n)}))};Multi.prototype.EXEC=Multi.prototype.exec;RedisClient.prototype.multi=function(e){return new Multi(this||y,e)};RedisClient.prototype.MULTI=function(e){return new Multi(this||y,e)};var L=RedisClient.prototype.eval;RedisClient.prototype.eval=RedisClient.prototype.EVAL=function(){var e=this||y,t=E(arguments),i;"function"===typeof t[t.length-1]&&(i=t.pop());var n=t[0];t[0]=A.createHash("sha1").update(n).digest("hex");e.evalsha(t,(function(s,o){if(s&&/NOSCRIPT/.test(s.message)){t[0]=n;L.call(e,t,i)}else i&&i(s,o)}))};v.createClient=function(e,t,i){var n=e||z,s=t||j,o,r;r=C.createConnection(n,s);o=new RedisClient(r,i);o.port=n;o.host=s;return o};v.print=function(e,t){e?console.log("Error: "+e):console.log("Reply: "+t)};const O=v.debug_mode,H=v.createClient,P=v.print;const Q=v.RedisClient,N=v.Multi;export default v;export{N as Multi,Q as RedisClient,H as createClient,O as debug_mode,P as print};

